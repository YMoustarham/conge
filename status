[1mdiff --git a/README.md b/README.md[m
[1mindex f53960b..1be8b20 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,4 +1,4 @@[m
[31m-conge[m
[32m+[m[32m#conge[m
 =====[m
 [m
 an application that helps get the must of your holydays by giving user the best period to take thier holydays[m
[36m@@ -42,3 +42,16 @@[m [mresult will be an object with this structure:[m
     Holyday.Name        //the holyday(s) or event(s) Name(s)[m
     Holyday.is_holyday  (not important!)[m
 [m
[32m+[m[32m=================================================================[m
[32m+[m
[32m+[m[32mTaches[m
[32m+[m
[32m+[m[32m______________________________________________[m
[32m+[m[32m//TODO    Create user table[m
[32m+[m[32m//TODO    registre user with facebook[m
[32m+[m[32m//TODO    login user with facebook[m
[32m+[m[32m//TODO    get events[m
[32m+[m[32m//TODO    recreate calculation core[m
[32m+[m[32m//TODO    amplement an api (json)[m
[32m+[m[32m//TODO    need API to support a list of additional include and exclude list of holydays from the client[m
[32m+[m[32m//TODO    (optional) allow user to set the importance of every holyday befor submitting to API[m
\ No newline at end of file[m
[1mdiff --git a/Taches b/Taches[m
[1mdeleted file mode 100644[m
[1mindex 8e20f76..0000000[m
[1m--- a/Taches[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-//TODO    Create user table[m
[31m-//TODO    registre user with facebook[m
[31m-//TODO    login user with facebook[m
[31m-//TODO    get events[m
[31m-//TODO    recreate calculation core[m
[31m-//TODO    amplement an api (json)[m
[31m-//TODO    need API to support a list of additional include and exclude list of holydays from the client[m
[31m-//TODO    (optional) allow user to set the importance of every holyday befor submitting to API[m
\ No newline at end of file[m
[1mdiff --git a/controlers/api.php b/controlers/api.php[m
[1mindex 00d1f1a..9969fbc 100644[m
[1m--- a/controlers/api.php[m
[1m+++ b/controlers/api.php[m
[36m@@ -16,7 +16,7 @@[m [mif(isset($_GET['from']) && isset($_GET['to']) && isset($_GET['days']) && isset($[m
     $fromDate = new DateTime($_GET['from']);[m
     $toDate = new DateTime($_GET['to']);[m
 [m
[31m-   // echo "calculation from :".$fromDate->format('Y-m-d')." to: ".$toDate->format('Y-m-d')."<br/>";[m
[32m+[m
 [m
     $include_sun = ($_GET['sun']=='true')? true:false;[m
     $include_sat = ($_GET['sat']=='true')? true:false;[m
[1mdiff --git a/test.php b/test.php[m
[1mdeleted file mode 100644[m
[1mindex b6a813a..0000000[m
[1m--- a/test.php[m
[1m+++ /dev/null[m
[36m@@ -1,74 +0,0 @@[m
[31m-<?php[m
[31m-/**[m
[31m- * Created by PhpStorm.[m
[31m- * User: GreyFox[m
[31m- * Date: 9/1/14[m
[31m- * Time: 12:33 PM[m
[31m- */[m
[31m-[m
[31m-require_once 'modules/HolyDay.php';[m
[31m-require_once 'modules/DB_Manager.php';[m
[31m-require_once 'modules/Period.php';[m
[31m-require_once 'modules/smarty_config.php';[m
[31m-[m
[31m-$fromDate = new DateTime('2014-03-01');[m
[31m-$toDate = new DateTime('2014-03-31');[m
[31m-[m
[31m-echo "calculation from :".$fromDate->format('Y-m-d')." to: ".$toDate->format('Y-m-d')."<br/>";[m
[31m-[m
[31m-[m
[31m-$holydays;[m
[31m-[m
[31m-[m
[31m-echo "<pre>";[m
[31m-$holydays =HolyDay::GetolyDays($fromDate,$toDate,true,true) ;[m
[31m-foreach ($holydays as $hd) {[m
[31m-    $hd->show_as_text();[m
[31m-}[m
[31m-[m
[31m-$periods = Period::calculateDates($holydays,7,true,true) ;[m
[31m-[m
[31m-$longest;[m
[31m-$cheapest;[m
[31m-[m
[31m-(Period::Filter($periods,$longest,$cheapest));[m
[31m-[m
[31m-[m
[31m-foreach ($longest as $l)[m
[31m-{[m
[31m-    echo Period::getAsString($l);[m
[31m-}[m
[31m-[m
[31m-foreach ($cheapest as $l)[m
[31m-{[m
[31m-    echo Period::getAsString($l);[m
[31m-}[m
[31m-[m
[31m-echo"</pre>";[m
[31m-[m
[31m-[m
[31m-function getAll(DateTime $fromDate ,DateTime $toDate)[m
[31m-{[m
[31m-[m
[31m-    $curentIndexdate=$fromDate;[m
[31m-[m
[31m-    $cal=array();[m
[31m-[m
[31m-    while($curentIndexdate!=$toDate)[m
[31m-    {[m
[31m-        $y = $curentIndexdate->format('Y');[m
[31m-        $m = $curentIndexdate->format('m');[m
[31m-        $d = $curentIndexdate->format('d');[m
[31m-        $hd =  new HolyDay($curentIndexdate);[m
[31m-[m
[31m-        $hd = DB::checkIsHolyday($hd,true,true);[m
[31m-        $hd->dateTime = new DateTime($y.'-'.$m.'-'.$d);[m
[31m-        $cal[$y][$m][$d] = $hd;[m
[31m-        $holydays_out[]= $hd;[m
[31m-        $curentIndexdate->add(new DateInterval('P1D'));[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    return $holydays_out;[m
[31m-    //return $cal;[m
[31m-}[m
